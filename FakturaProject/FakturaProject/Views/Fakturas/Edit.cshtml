@model FakturaProject.ViewModel.FakturaViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

@Html.ValidationSummary(true, "", new { @class = "text-danger" })

<div class="form-horizontal">
    <table class="table">
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.Faktura.Datum)
            </td>
            <td>
                @Html.DisplayNameFor(model => model.Faktura.BrojFakture)
            </td>
            <td>
                @Html.DisplayNameFor(model => model.Faktura.Ukupno)
            </td>
        </tr>
        <tr>
            @Html.HiddenFor(model => model.Faktura.FakturaID)
            <td>
                @Html.TextBoxFor(model => model.Faktura.Datum, new { @class = "form-control", @readonly = "readonly" })
            </td>
            <td>
                @Html.TextBoxFor(model => model.Faktura.BrojFakture, new { @class = "form-control", @readonly = "readonly" })
            </td>
            <td>
                @Html.TextBoxFor(model => model.Faktura.Ukupno, new { @class = "form-control", @readonly = "readonly" })
            </td>
        </tr>
    </table>
    
    <table class="table">
        <tr>
            <th>
                Redni Broj
            </th>
            <th>
                Cena
            </th>
            <th>
                Kolicina
            </th>
            <th>
                Ukupno
            </th>
        </tr>
        @if (Model.Stavkas != null)
        {
            for (int i = 0; i < Model.Stavkas.Count(); i++)
            {
        <tr>
            @Html.HiddenFor(modelItem => Model.Stavkas[i].StavkaID)
            <td>
                @Html.EditorFor(ModelItem => Model.Stavkas[i].RedniBroj, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </td>
            <td>
                @Html.EditorFor(ModelItem => Model.Stavkas[i].Cena, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(modelItem => Model.Stavkas[i].Cena, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.EditorFor(ModelItem => Model.Stavkas[i].Kolicina, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(modelItem => Model.Stavkas[i].Kolicina, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.EditorFor(ModelItem => Model.Stavkas[i].Ukupno, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" }  })
            </td>
        </tr>
        }
            
    }
    </table>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
